version: "3.9"

services:
  # Zookeeper service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - kafka-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - kafka-network

  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - kafka-network

  # Spark master service
  spark-master:
    image: apache/spark:3.5.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_CONF_DIR=/opt/spark/conf
      - SPARK_LOCAL_IP=spark-master
      - SPARK_JARS=/opt/spark/jars/spark-sql-kafka-0-10_2.12-3.3.0.jar,/opt/spark/jars/mongo-spark-connector_2.12-10.4.0.jar,/opt/spark/jars/kafka-clients-3.3.0.jar
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - kafka-network
    command: >
      bash -c "curl -o /opt/spark/jars/mongo-spark-connector_2.12-10.4.0.jar https://repo1.maven.org/maven2/org/mongodb/spark/mongo-spark-connector_2.12/10.4.0/mongo-spark-connector_2.12-10.4.0.jar &&
      /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master"

  # Spark worker service
  spark-worker:
    image: apache/spark:3.5.1
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_CONF_DIR=/opt/spark/conf
      - SPARK_LOCAL_IP=spark-worker
      - SPARK_JARS=/opt/spark/jars/spark-sql-kafka-0-10_2.12-3.3.0.jar,/opt/spark/jars/mongo-spark-connector_2.12-10.4.0.jar,/opt/spark/jars/kafka-clients-3.3.0.jar
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    networks:
      - kafka-network
    command: >
      bash -c "curl -o /opt/spark/jars/mongo-spark-connector_2.12-10.4.0.jar https://repo1.maven.org/maven2/org/mongodb/spark/mongo-spark-connector_2.12/10.4.0/mongo-spark-connector_2.12-10.4.0.jar &&
      /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"

volumes:
  mongo-data:

networks:
  kafka-network:
    driver: bridge
